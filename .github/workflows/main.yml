name: Deploy Front to S3

on:
  push:
    branches:
      - production

permissions:
  id-token: write
  contents: read

jobs:
  caching-pnpm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - uses: actions/setup-node@v4
        with:
          node-version: '14'
          cache: 'pnpm'
      - run: pnpm install

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm run build

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync build to S3
        env:
          BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
        run: |
          aws s3 sync dist/ s3://$BUCKET/ --delete

      - name: Invalidate CloudFront (optional)
        if: env.AWS_CLOUDFRONT_ID != ''
        env:
          AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID }}
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.AWS_CLOUDFRONT_ID }} --paths "/*"
